version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: ml_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-mlapp}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 10s
      timeout: 5s
      retries: 5

  flask:
    build: ./flask
    container_name: ml_flask
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-user}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-mlapp}
      FLASK_ENV: development
    volumes:
      - ./flask:/app
      - ./models:/app/models
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  nginx:
    build: ./nginx
    container_name: ml_nginx
    ports:
      - "80:80"
    volumes:
      - ./flask/static:/static
    depends_on:
      - flask
      - llm
    restart: unless-stopped

  jupyter:
    build: ./jupyter
    container_name: ml_jupyter
    ports:
      - "8888:8888"
    volumes:
      - ./notebooks:/workspace/notebooks
      - ./data:/workspace/data
      - ./models:/workspace/models
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-user}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-mlapp}
      JUPYTER_TOKEN: ${JUPYTER_TOKEN}
    depends_on:
      - postgres
    restart: unless-stopped

  # 新規追加: LLMサービス
  llm:
    build: ./llm
    container_name: ml_llm
    ports:
      - "5001:5001"
    volumes:
      - ./llm/iris_model:/app/iris_model:rw  # モデルディレクトリを追加
      - llm_models:/app/models
    environment:
      FLASK_ENV: development
      PYTHONUNBUFFERED: 1
      TRANSFORMERS_CACHE: /app/models
      TOKENIZERS_PARALLELISM: "false"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G  # 20GBに設定

volumes:
  postgres_data:
  llm_models: